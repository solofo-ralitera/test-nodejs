extends layout

block content
    script.
        function addConsole(message) {
            document.getElementById("restconsole").innerHTML = "<div>" + message + "</div>";
        }

        window.onload = (function(prtLoad) {
            if(prtLoad) prtLoad();

            var socket = io();

            socket.on('rest-generatetoken', function (data) {
                document.getElementById("token").value = data.token;
                addConsole(data.token)
            });

            document.getElementById("generatetoken").onkeydown = function (oKey) {
                if (oKey.keyCode == 13) {
                    socket.emit('rest-generatetoken', {
                        name: this.value
                    });
                    this.value = "";
                }
            };
        }).bind(null, window.onload);
    section
        article
            header
                h1   Testing NodeJs - Express - Rest - Token
                div.flatbuttoncontainer

            h3  Content
            p   Create a simple Rest Api for todo list
            ul
                li  Use a REST client for testing by providing the token generated below
                li  Token is generated by #[a(href="https://github.com/auth0/node-jsonwebtoken" target="__blank") jsonwebtoken]
                li  Send token in the header key "authorization"
                li  Todo fields are : #{fields}
            h3 Available Api
            table(border="1" cellpadding="5" cellspacing="0")
                tr
                    th  Type
                    th  Api
                    th  Description
                tr
                    td  GET
                    td  /rest/todos
                    td  Returns every TODOs from database (can be filtered by limit/offest and ordered)
                tr
                    td  GET
                    td  /rest/todo/:id
                    td  Returns TODO with match of id
                tr
                    td  POST
                    td  /rest/todo
                    td  Add new TODO
                tr
                    td  PUT
                    td  /rest/todo
                    td  Update TODO with match of id in parameters
                tr
                    td  PATCH
                    td  /rest/todo
                    td  Update TODO part with match of id in parameters
                tr
                    td  DELETE
                    td  /rest/todo
                    td  Remove TODO by id
            p
                input#generatetoken(type="text" placeholder="Generate token for an user...")
            div#restconsole.console(style="word-wrap:break-word")   #{token}
            hr
            form(method="POST" action="/rest/todo" target="frameadd" accept-charset="utf-8")
                input#token(type="hidden" name="token" value="#{token}")
                input#addtodo(type="text" placeholder="Add todo using POST Api..." name="name")
                br
                iframe(name="frameadd" style="border:0px;width:100%;" src="")
            footer
